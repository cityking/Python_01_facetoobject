定义类 方法 属性
实例化类
	调用__new__方法创建实例 __new__方法自动从Object继承
	调用__init__方法对其进行初始化 __init__方法在类中定义
查看类说明
	类名.__doc__
	help(类名)
实例属性 类属性 私有属性
	实例属性：对象名.属性名访问优先引用类的实例属性
	类属性：以类名.属性名只能访问类属性
特殊属性
	__doc__：查看类说明
	__name__
		1. 如果模块是被导入，__name__的值为模块名字
		2. 如果模块是被直接执行，__name__的值为’__main__’
	__dict__：局部属性集合
	__module__：函数的的模块名称
	__base__：父类
方法 构造方法
	静态方法和类方法
		定义静态方法：@staticmethod 静态方法只能访问类属性不能访问实例属性
		定义类方法：@classmethod 类方法只能访问类属性不能访问实例属性
    
    
反射 用字符串的形式操作类的属性/方法
	主要工具函数 
		hasattr(对象名,属性名) 检测是否有此属性
		setattr(对象名,属性名,值) 设置属性的值
		getattr(对象名,属性名) 获取属性的值
属性包装(用装饰器把私有属性包装成外面可读可写可删除的属性)
	可读 @property
	可写@属性名.setter
	可删@属性名.delete
描述符
类的继承和方法重载
元类 类的创建和管理者 所有类都是元类(type)的实例
	通过type创建类 hello = type('hello',(object,),dict(helo=lambda lf:print_('hello')))
	自定义元类 对其创建的类进行预处理
构造序列
	实现 __init__ __len__ __getitem__方法
构造迭代器
	实现 __init__ __iter__ __next__方法
设计模式
	单例模式
	工厂模式
	策略模式
		类作为参数传递
		函数作为传递参数
	装饰模式